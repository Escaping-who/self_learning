geom_signif(y_position=c(350,400,350,400), xmin=c(0.75,0.75,1.58,1.58), xmax=c(1.09,1.42,1.92,2.25),
annotation=c("*","**","*","*"), tip_length=c(0.04,0.04,0.04,0.04), size=0.8, textsize = 7,
vjust = 0.3)+
scale_fill_manual(values = c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1'))
# geom_signif(data=plot_data2,mapping=aes(x=group,y=SOD), # 不同组别的显著性
#             comparisons = list(c("C", "HT"), # 哪些组进行比较
#                                c("HI", "HT")),
#             annotation=c("**"), # 显著性差异做标记
#             map_signif_level=T, # T为显著性，F为p value
#             tip_length=c(0.04,0.04,0.05,0.05), # 修改显著性那个线的长短
#             y_position = c(4100,3000), # 设置显著性线的位置高度
#             size=1, # 修改线的粗细
#             textsize = 10, # 修改*标记的大小
#             test = "t.test")+ # 检验的类型
#
#
#
# ??geom_jitter
# Load packages
library(ggprism)
library(ggpubr)
ph <- read.xlsx("/Users/xuanzhui/Desktop/ph.xlsx", sheet = 1)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
ph <- read.xlsx("/Users/xuanzhui/Desktop/ph.xlsx", sheet = 1)
ph$Group <- fct_inorder(ph$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+140mg/kg Nar.", "SU+280mg/kg Nar.", "SU+560mg/kg Nar.")
# # Calculate mean and se of each group
# aov.mean <- aggregate(ph$values,
#                       by= list(ph$group),
#                       FUN = mean)
# aov.se <- aggregate(ph$values,
#                     by= list(ph$group),
#                     FUN = function(x){sd(x)/sqrt(length(x))})
# aov <- data.frame(aov.mean, se = aov.se$x)
#
# print(aov)
# Plot using ggplot2
ggplot(data = ph, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6), xmin=c(1), xmax=c(3),
annotation=c("*"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = ph, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = ph,
# method = "anova",
aes(x = Group, y = values),
label.y = c(7),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
ph <- read.xlsx("/Users/xuanzhui/Desktop/ph.xlsx", sheet = 1)
ph$Group <- fct_inorder(ph$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+1.4% Nar.", "SU+2.8% Nar.", "SU+5.6% Nar.")
# # Calculate mean and se of each group
# aov.mean <- aggregate(ph$values,
#                       by= list(ph$group),
#                       FUN = mean)
# aov.se <- aggregate(ph$values,
#                     by= list(ph$group),
#                     FUN = function(x){sd(x)/sqrt(length(x))})
# aov <- data.frame(aov.mean, se = aov.se$x)
#
# print(aov)
# Plot using ggplot2
ggplot(data = ph, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6), xmin=c(1), xmax=c(3),
annotation=c("*"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = ph, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = ph,
# method = "anova",
aes(x = Group, y = values),
label.y = c(7),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
HErate <- read.xlsx("/Users/xuanzhui/Desktop/HErate.xlsx", sheet = 3)
HErate$Group <- fct_inorder(HErate$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+1.4% Nar.", "SU+2.8% Nar.", "SU+5.6% Nar.")
# # Calculate mean and se of each group
# aov.mean <- aggregate(ph$values,
#                       by= list(ph$group),
#                       FUN = mean)
# aov.se <- aggregate(ph$values,
#                     by= list(ph$group),
#                     FUN = function(x){sd(x)/sqrt(length(x))})
# aov <- data.frame(aov.mean, se = aov.se$x)
#
# print(aov)
# Plot using ggplot2
ggplot(data = HErate, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6), xmin=c(1), xmax=c(3),
annotation=c("*"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = HErate, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = HErate,
# method = "anova",
aes(x = Group, y = values),
label.y = c(7),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Load packages
library(reshape2)
library(ggplot2)
library(dplyr)
library(openxlsx)
library(ggprism)
library(ggpubr)
library(forcats)
library(ez)
#read data
Mice_weight_everyday <- read.xlsx("/Users/xuanzhui/Desktop/小鼠每日体重.xlsx",
sheet = 1)
#处理数据，去除 NA 值
Mice_weight_melt <- melt(Mice_weight_everyday, id.vars = "Group",
variable.name = "Date", value.name = "Weight")
Mice_weight_melt <- Mice_weight_melt[!is.na(Mice_weight_melt$Weight), ]
Mice_weight_melt$Group <- fct_inorder(Mice_weight_melt$Group)
# 计算均值和标准误
summary_weight <- Mice_weight_melt %>%
group_by(Group, Date) %>%
summarise(
Mean = mean(Weight),
SE = sd(Weight) / sqrt(n())
)
#固定组别顺序
summary_weight$Group <- fct_inorder(summary_weight$Group)
Mice_weight_everyday$Group <- fct_inorder(Mice_weight_everyday$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+1.4% Nar.", "SU+2.8% Nar.", "SU+5.6% Nar.")
#指定线段类型
group_linetypes <- c(
"Blank" = "solid",
"Model" = "dashed",
"Positive" = "dotted",
"low dose" = "dotdash",
"medium dose" = "longdash",
"high dose" = "twodash"
)
annotation <- c("test")
# 画折线图
ggplot(summary_weight, aes(x = Date, y = Mean, color = Group, group = Group,
shape = Group,
# linetype = Group
)) +
geom_line() +
geom_point(size = 3, fill = "black",stroke = 0.5) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.1) +
theme_prism() +
ylim(0,40)+
labs(title = "", x = "Date", y = "Mice Weight (g)")+
scale_color_manual(values = ColorPalette)+
annotate('text', x = 2.9, y = 39,
label = "One-way Repeated Measures ANOVA, p = 0.84")+
# scale_linetype_manual(values = group_linetypes)+
scale_shape_manual(values = c(15,16,17,18,19,6))
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
HErate <- read.xlsx("/Users/xuanzhui/Desktop/HErate.xlsx", sheet = 3)
HErate$Group <- fct_inorder(HErate$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+1.4% Nar.", "SU+2.8% Nar.", "SU+5.6% Nar.")
# # Calculate mean and se of each group
# aov.mean <- aggregate(ph$values,
#                       by= list(ph$group),
#                       FUN = mean)
# aov.se <- aggregate(ph$values,
#                     by= list(ph$group),
#                     FUN = function(x){sd(x)/sqrt(length(x))})
# aov <- data.frame(aov.mean, se = aov.se$x)
#
# print(aov)
# Plot using ggplot2
ggplot(data = HErate, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6), xmin=c(1), xmax=c(3),
annotation=c("*"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = HErate, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = HErate,
# method = "anova",
aes(x = Group, y = values),
label.y = c(7),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
HErate <- read.xlsx("/Users/xuanzhui/Desktop/HErate.xlsx", sheet = 3)
HErate$Group <- fct_inorder(HErate$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+1.4% Nar.", "SU+2.8% Nar.", "SU+5.6% Nar.")
# # Calculate mean and se of each group
# aov.mean <- aggregate(ph$values,
#                       by= list(ph$group),
#                       FUN = mean)
# aov.se <- aggregate(ph$values,
#                     by= list(ph$group),
#                     FUN = function(x){sd(x)/sqrt(length(x))})
# aov <- data.frame(aov.mean, se = aov.se$x)
#
# print(aov)
# Plot using ggplot2
ggplot(data = HErate, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6), xmin=c(1), xmax=c(3),
annotation=c("*"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = HErate, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = HErate,
# method = "anova",
aes(x = Group, y = values),
label.y = c(10),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
HErate <- read.xlsx("/Users/xuanzhui/Desktop/HErate.xlsx", sheet = 3)
HErate$Group <- fct_inorder(HErate$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+1.4% Nar.", "SU+2.8% Nar.", "SU+5.6% Nar.")
# # Calculate mean and se of each group
# aov.mean <- aggregate(ph$values,
#                       by= list(ph$group),
#                       FUN = mean)
# aov.se <- aggregate(ph$values,
#                     by= list(ph$group),
#                     FUN = function(x){sd(x)/sqrt(length(x))})
# aov <- data.frame(aov.mean, se = aov.se$x)
#
# print(aov)
# Plot using ggplot2
ggplot(data = HErate, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6,7.5,9.5), xmin=c(1,2,2), xmax=c(2,4,6),
annotation=c("*","*","**"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = HErate, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = HErate,
# method = "anova",
aes(x = Group, y = values),
label.y = c(10),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Plot using ggplot2
ggplot(data = HErate, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6,7.5,9.5), xmin=c(1,2,2), xmax=c(2,4,6),
annotation=c("*","*","**"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = HErate, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = HErate,
# method = "anova",
aes(x = Group, y = values),
label.y = c(11),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Plot using ggplot2
ggplot(data = HErate, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6,7.5,9.5), xmin=c(1,2,2), xmax=c(2,4,6),
annotation=c("*","*","**"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = HErate, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = HErate,
# method = "anova",
aes(x = Group, y = values),
label.y = c(11.5),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
HErate <- read.xlsx("/Users/xuanzhui/Desktop/HErate.xlsx", sheet = 3)
HErate$Group <- fct_inorder(HErate$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+1.4% Nar.", "SU+2.8% Nar.", "SU+5.6% Nar.")
# # Calculate mean and se of each group
# aov.mean <- aggregate(ph$values,
#                       by= list(ph$group),
#                       FUN = mean)
# aov.se <- aggregate(ph$values,
#                     by= list(ph$group),
#                     FUN = function(x){sd(x)/sqrt(length(x))})
# aov <- data.frame(aov.mean, se = aov.se$x)
#
# print(aov)
# Plot using ggplot2
ggplot(data = HErate, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6,7.5,10), xmin=c(1,2,2), xmax=c(2,4,6),
annotation=c("*","*","**"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = HErate, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("pH")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = HErate,
# method = "anova",
aes(x = Group, y = values),
label.y = c(11.5),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
HErate <- read.xlsx("/Users/xuanzhui/Desktop/HErate.xlsx", sheet = 3)
HErate$Group <- fct_inorder(HErate$Group)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
HErate <- read.xlsx("/Users/xuanzhui/Desktop/HErate.xlsx", sheet = 3)
HErate$Group <- fct_inorder(HErate$Group)
A <- read.csv("/Users/xuanzhui/Desktop/A.csv",header = T)
library(ggplot2)
library(forcats)
library(ggpubr)
library(devEMF)
# Load packages
library(ggprism)
library(ggpubr)
library(openxlsx)
HErate <- read.xlsx("/Users/xuanzhui/Desktop/HErate.xlsx", sheet = 3)
HErate$Group <- fct_inorder(HErate$Group)
# Color palette
ColorPalette <- c('#969696','#f0493a','#87A922',
'#87c8f1','#3a6ff0','#8a87f1')
names(ColorPalette) <- c("Blank Control", "SU+Vehi.", "SU+Cime.",
"SU+1.4% Nar.", "SU+2.8% Nar.", "SU+5.6% Nar.")
# # Calculate mean and se of each group
# aov.mean <- aggregate(ph$values,
#                       by= list(ph$group),
#                       FUN = mean)
# aov.se <- aggregate(ph$values,
#                     by= list(ph$group),
#                     FUN = function(x){sd(x)/sqrt(length(x))})
# aov <- data.frame(aov.mean, se = aov.se$x)
#
# print(aov)
# Plot using ggplot2
ggplot(data = HErate, aes(x = Group, y = values, fill = Group))+
geom_bar(stat="summary",position="dodge", width = 0.7, color = "black", size = 0.5)+
geom_signif(y_position=c(6,7.5,10), xmin=c(1,2,2), xmax=c(2,4,6),
annotation=c("*","*","**"), tip_length=c(0.02), size=0.8, textsize = 7,
vjust = 0.3)+
stat_summary(fun.data = 'mean_se', geom = "errorbar", colour = "black",
width = 0.2,position = position_dodge(1))+
geom_jitter(data = HErate, aes(y = values),size = 3, shape = 21,
color = "#000000",
stroke = 0.5, show.legend = TRUE,
position = position_jitterdodge(jitter.height=0, jitter.width = 2,dodge.width = 1))+
ylab("HErate")+
xlab("")+
scale_fill_manual(values = c(ColorPalette))+
stat_compare_means(data = HErate,
# method = "anova",
aes(x = Group, y = values),
label.y = c(11.5),
label.x = c(1.2))+
theme_prism(axis_text_angle = 45)
x <- 1
x = 1
x
x = 1
x
x = rnorm(1000)
y = rnorm(1000)
plot(x,y)
x = rnorm(1000)
y = rnorm(1000)
plot(x,y)
#包的管理
install.packages("")
remove.packages("")
update.packages("")
library() #加载包
library(ggplot2)
?help
?library
??library
getwd()
file.choose()
file.choose()
setwd("/Users/xuanzhui/git/self_learning")
help(package = "ggplot2")
v1 <- 5
save()
save("test")
?save
save(ls(),file = "test.RData")
ls()
save(v1,file = "test.RData")
load("~/git/self_learning/test.RData")
rm(v1)
load("test.RData")
rm(v1)
